apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.deploy.spec.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      component: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        component: {{ .Values.name }}
    spec:
      containers:
        - image: {{ .Values.deploy.image }}
          imagePullPolicy: IfNotPresent
          name: {{ .Values.name }}
          envFrom:
            - secretRef:
                name: {{ .Values.name }}-secret
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
            exec:
              command:
                - curl
                - --fail
                - {{ .Values.name }}.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.service.port }}/health
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
            exec:
              command:
                - curl
                - --fail
                - {{ .Values.name }}.{{ .Values.namespace }}.svc.cluster.local:80/health
          resources:
            limits:
              cpu: {{ .Values.deploy.template.spec.containers.resources.limits.cpu }}
              memory: {{ .Values.deploy.template.spec.containers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.deploy.template.spec.containers.resources.requests.cpu }}
              memory: {{ .Values.deploy.template.spec.containers.resources.requests.memory }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
